<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	
	<resultMap type="Member" id="memberResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
   		<result property="memberEmail" column="MEMBER_EMAIL"/>
  		<result property="memberPwd" column="MEMBER_PWD"/>
  		<result property="memberNm" column="MEMBER_NM"/>
  		<result property="memberNickname" column="MEMBER_NICKNAME"/>
  		<result property="memberPhone" column="MEMBER_PHONE"/>
  		<result property="memberGender" column="MEMBER_GENDER"/>
  		<result property="memberAge" column="MEMBER_AGE"/>
  		<result property="memberProfileUrl" column="MEMBER_PROFILE_URL"/>
  		<result property="memberGrade" column="MEMBER_GRADE"/>
  		<result property="memberEnrollDt" column="MEMBER_ENROLL_DT"/>
  		<result property="memberStatus" column="MEMBER_STATUS"/>
	</resultMap>
	
	<!-- 회원가입용 -->
	<insert id="signUp" parameterType="Member">
  		INSERT INTO MEMBER
  		VALUES(SEQ_MEMBER.NEXTVAL, #{memberEmail}, #{memberPwd}, 
  				#{memberNm}, #{memberNickname}, #{memberPhone},
  				#{memberGender}, #{memberAge}, DEFAULT,	DEFAULT, DEFAULT, DEFAULT)
  	</insert>
  	
  	<!-- 로그인용 -->
  	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
  		SELECT * FROM MEMBER
  		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_STATUS = 'Y'
  	</select>
	
	<!-- 이메일 찾기용 -->
	<select id="findEmail" parameterType="Member" resultType="string">
		SELECT MEMBER_EMAIL 
		FROM MEMBER
		WHERE MEMBER_NM=#{memberNm} AND MEMBER_PHONE=#{memberPhone}
	</select>
	
	<!-- 비밀번호 찾기용 -->
	<select id="findPassword" parameterType="Member" resultType="string">
		SELECT MEMBER_PWD
		FROM MEMBER
		WHERE MEMBER_NM=#{memberNm} AND MEMBER_EMAIL=#{memberEmail}
		AND MEMBER_PHONE=#{memberPhone}
	</select>
	
	
	<!-- 이메일 중복 확인용 -->
	<select id="emailDupcheck" parameterType="string" resultType="_int">
		SELECT COUNT (*)
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<!-- 닉네임 중복 확인용 -->
	<select id="nickNameDupcheck" parameterType="string" resultType="_int">
		SELECT COUNT (*)
		FROM MEMBER
		WHERE MEMBER_NICKNAME = #{memberNickname}
	</select>
	
	<!-- 비밀번호 난수로 업데이트 하는 용도 -->
	<update id="makeRandomPwd" parameterType="map">
		UPDATE MEMBER SET 
		MEMBER_PWD = #{newPwd}
		WHERE MEMBER_EMAIL = #{email}
	</update>
	
	
	
	
	
</mapper>
